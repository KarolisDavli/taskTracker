{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0354f02.chunk.js","sourcesContent":["\nimport PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='btn'\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue',\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button","// import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ onAdd, showAdd }) => {\n\n  return (\n    <header className='header'>\n      <h1>Task Tracker</h1>\n      <Button \n        color={showAdd ? 'red' : 'green'}\n        text={showAdd ? 'Close' : 'Add'} \n        onClick={onAdd}\n      />\n    </header>\n  )\n}\n\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\n\nexport const Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n      <h3>\n        {task.text} <FaTimes style={{color:\n        'red', cursor: 'pointer '}} \n        onClick={() => onDelete(task.id)} />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  )\n}\n\nexport default Task","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} \n        onDelete={onDelete}\n        onToggle={onToggle}/>\n      ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\nconst onSubmit = (e) => {\n  e.preventDefault()\n\n  if(!text) {\n    alert('Please add a task')\n    return\n  }\n\n  onAdd({ text, day, reminder })\n\n  setText('')\n  setDay('')\n  setReminder(false)\n}\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input type=\"text\" \n          placeholder='Add Task' \n          value={text} \n          onChange={(e) => setText(e.target.value)} />\n      </div>\n\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input type=\"text\" placeholder='Add Day & Time' \n        value={day} \n        onChange={(e) => setDay(e.target.value)}/>\n      </div>\n\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input \n        type=\"checkbox\" \n        checked={reminder}\n        value={reminder} \n        onChange={(e) => setReminder(e.currentTarget.checked)}/>\n      </div>\n\n      <input type=\"submit\" value='Save Tasks' className='btn btn-block'/>\n    </form>\n  )\n}\n\nexport default AddTask\n","import { useState } from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctors Appointment',\n      day: 'Aug 7th ar 8:30am',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Go to gym',\n      day: 'Aug 8th ar 10:30am',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Shopping',\n      day: 'Aug 8th ar 14:00pm',\n      reminder: true,\n    }\n  ])\n\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toogle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id\n      ? { ...task, reminder: !task.reminder } : task))\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete=\n          {deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks To Show'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}